{"version":3,"sources":["services.js","PersonForm.js","PersonInfo.js","App.js","index.js"],"names":["baseUrl","getAll","a","axios","get","request","data","create","newObject","post","res","update","id","put","deleteperson","delete","PersonForm","newInfo","setNewInfo","setPersons","persons","onSubmit","event","preventDefault","findIndex","person","name","alert","addperson","number","length","personServices","then","concat","value","onChange","target","type","PersonInfo","deletePerson","console","log","map","persona","key","onClick","Filter","App","useState","message","useEffect","respone","find","p","window","confirm","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a992af2.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = async () => {\n  const request = await axios.get(baseUrl);\n  const data = await request;\n  return data;\n};\n\nconst create = async newObject => {\n  const request = axios.post(baseUrl, newObject);\n  const res = await request;\n  return res;\n};\n\nconst update = async (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  const res = await request;\n  return res;\n};\n\nconst deleteperson = async id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  const res = await request;\n  return res;\n};\n\nexport default { getAll, create, update, deleteperson };\n","import React from \"react\";\nimport personServices from \"./services\";\n\nexport const PersonForm = ({ newInfo, setNewInfo, setPersons, persons }) => {\n  const Submit = event => {\n    event.preventDefault();\n    if (persons.findIndex(person => person.name === newInfo.name) > -1) {\n      alert(`${newInfo.name} is already in the phonebook`);\n    } else {\n      const addperson = {\n        name: newInfo.name,\n        number: newInfo.number,\n        id: persons.length + 1\n      };\n\n      personServices.create(addperson).then(() => {\n        setPersons(persons.concat(addperson));\n        setNewInfo({ name: \"\", number: \"\" });\n      });\n    }\n  };\n  const NameChange = event => {\n    setNewInfo({ ...newInfo, name: event.target.value });\n  };\n  const NumberChange = event => {\n    setNewInfo({ ...newInfo, number: event.target.value });\n  };\n  return (\n    <form onSubmit={Submit}>\n      <div>\n        name: <input value={newInfo.name} onChange={NameChange} />\n        number: <input value={newInfo.number} onChange={NumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n","import React from \"react\";\n\nexport const PersonInfo = ({ persons, deletePerson }) => {\n  console.log(persons);\n  return persons.map(persona => (\n    <div key={persona.name}>\n      {persona.name}\n      {persona.number}\n      <button\n        onClick={() => {\n          deletePerson(persona.id);\n        }}\n      >\n        delete\n      </button>\n    </div>\n  ));\n};\n","import React, { useState, useEffect } from \"react\";\nimport personServices from \"./services\";\nimport { PersonForm } from \"./PersonForm\";\nimport { PersonInfo } from \"./PersonInfo\";\n\nconst Filter = () => {\n  return (\n    <div>\n      filter shown with <input />\n    </div>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newInfo, setNewInfo] = useState({ name: \"\", number: \"\" });\n  const [notification, setNotification] = useState({\n    message: null\n  });\n\n  useEffect(() => {\n    personServices.getAll().then(respone => {\n      setPersons(respone.data);\n    });\n  }, []);\n\n  const deletePerson = id => {\n    const person = persons.find(p => p.id === id);\n    const ok = window.confirm(`delete ${person.name}`);\n    if (ok) {\n      personServices.deleteperson(id).then(() => {\n        setPersons(persons.filter(p => p.id !== id));\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter />\n      <h3>Add a new</h3>\n      <PersonForm\n        newInfo={newInfo}\n        setNewInfo={setNewInfo}\n        persons={persons}\n        setPersons={setPersons}\n      />\n\n      <h2> Numbers</h2>\n      <PersonInfo persons={persons} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}